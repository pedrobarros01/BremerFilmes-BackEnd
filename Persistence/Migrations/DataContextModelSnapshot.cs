// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Persistence.Context;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Model.ReviewFilme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Curtidas")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DtUserCreate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DtUserDelete")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DtUserUpdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdFilmeTMDB")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUserCreate")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUserDelete")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUserUpdate")
                        .HasColumnType("integer");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("integer");

                    b.Property<decimal>("Nota")
                        .HasColumnType("numeric");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ReviewFilmes");
                });

            modelBuilder.Entity("Dominio.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DtUserCreate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DtUserDelete")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DtUserUpdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("IdUserCreate")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUserDelete")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUserUpdate")
                        .HasColumnType("integer");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domain.Model.ReviewFilme", b =>
                {
                    b.HasOne("Dominio.Model.User", "Usuario")
                        .WithMany("ReviewFilmes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Dominio.Model.User", b =>
                {
                    b.Navigation("ReviewFilmes");
                });
#pragma warning restore 612, 618
        }
    }
}
