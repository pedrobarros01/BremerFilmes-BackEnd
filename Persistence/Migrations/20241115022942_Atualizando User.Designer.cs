// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Persistence.Context;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241115022942_Atualizando User")]
    partial class AtualizandoUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Model.FilmeFav", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DtUserCreate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DtUserDelete")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DtUserUpdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdFilmeTMDB")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUserCreate")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUserDelete")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUserUpdate")
                        .HasColumnType("integer");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("integer");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.ToTable("FilmesFavoritos");
                });

            modelBuilder.Entity("Domain.Model.PessoaFav", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("DtUserCreate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DtUserDelete")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DtUserUpdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdPessoaTMDB")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUserCreate")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUserDelete")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUserUpdate")
                        .HasColumnType("integer");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("integer");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.ToTable("PessoasFavoritas");
                });

            modelBuilder.Entity("Domain.Model.ReviewFilme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Curtidas")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DtUserCreate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DtUserDelete")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DtUserUpdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdFilmeTMDB")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUserCreate")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUserDelete")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUserUpdate")
                        .HasColumnType("integer");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("integer");

                    b.Property<decimal>("Nota")
                        .HasColumnType("numeric");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.ToTable("ReviewFilmes");
                });

            modelBuilder.Entity("Dominio.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("DtUserCreate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DtUserDelete")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DtUserUpdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("IdUserCreate")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUserDelete")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUserUpdate")
                        .HasColumnType("integer");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domain.Model.FilmeFav", b =>
                {
                    b.HasOne("Dominio.Model.User", "User")
                        .WithMany("FilmeFavoritos")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Model.PessoaFav", b =>
                {
                    b.HasOne("Dominio.Model.User", "User")
                        .WithMany("PessoasFavoritas")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Model.ReviewFilme", b =>
                {
                    b.HasOne("Dominio.Model.User", "User")
                        .WithMany("ReviewFilmes")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Dominio.Model.User", b =>
                {
                    b.Navigation("FilmeFavoritos");

                    b.Navigation("PessoasFavoritas");

                    b.Navigation("ReviewFilmes");
                });
#pragma warning restore 612, 618
        }
    }
}
